services:
  api_db:
    build: ./BBDD
    restart: always
    ports:
      - 3307:3306
    networks:
      - api_network
    volumes:
      - mysql-data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}

  
  php:
    image: php:8.2-fpm
    container_name: php
    volumes:
      - ./app-res:/usr/share/nginx/static
    networks:
      - api_network  
  
  nginx:
    image: nginx:latest
    container_name: nginx
    depends_on:
      - angular
      - api
      - php
    ports:
      - "80:80"
      - "443:443"
      - "444:444"
    volumes:
      - ./NGINX/default.conf:/etc/nginx/conf.d/default.conf
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt
      - ./app-res:/usr/share/nginx/static
      - angular_dist:/usr/share/nginx/html
    networks:
      - api_network  

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt
    networks:
      - api_network

  api:
    build: ./Backend/deckup/
    ports:
      - 8888:8888
    depends_on:
      - api_db
    container_name: api
    networks:
      - api_network
    environment:
      - spring.datasource.url=jdbc:mysql://api_db:3306/deckup
      - spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}

  angular:
    build: ./Frontend/deckup
    container_name: angular
    expose:
      - "80"
    networks:
      - api_network
    volumes:
      - angular_dist:/app/dist/deckup

networks:
  api_network:

volumes:
  mysql-data:
  angular_dist: